name: evaluate
on: [push]
jobs:
  pull:
    runs-on: ubuntu-latest
    steps:
      - name: download source data
        run: |
          curl -LO https://github.com/AakashKumarNain/CaptchaCracker/raw/master/captcha_images_v2.zip

      - name: Save Artifact
        uses: actions/upload-artifact@v3
        with:
          name: source-data
          path: captcha_images_v2.zip

  build-dataset:
    runs-on: self-hosted
    needs: pull
    steps:
      - uses: actions/checkout@v3
      - name: Download 
        uses: actions/download-artifact@v3
        with:
          name: source-data

      - name: create dataset
        run: |
          7z x captcha_images_v2.zip -aos
          python build_dataset.py
          7z a dataset.7z train_dataset validation_dataset

      - name: Save dataset
        uses: actions/upload-artifact@v3
        with:
          name: dataset
          path: dataset.7z

  train-model:
    runs-on: self-hosted
    needs: build-dataset
    steps:
      - name: Download 
        uses: actions/download-artifact@v3
        with:
          name: dataset

      - name: train model
        run: |
          7z x dataset.7z -aos
          python main.py
          7z a trained-neuron.7z assets -sdel

      - name: trained model
        uses: actions/upload-artifact@v3
        with:
          name: trained-neuron
          path: trained-neuron.7z

  test-model:
    runs-on: self-hosted
    needs: train-model
    steps:
      - name: Download dataset
        uses: actions/download-artifact@v3
        with:
          name: dataset

      - name: Download model
        uses: actions/download-artifact@v3
        with:
          name: trained-neuron

      - name: test model
        run: |
          7z x trained-neuron.7z -aos
          7z x dataset.7z -aos
          python test_model.py

      - name: result
        uses: actions/upload-artifact@v3
        with:
          name: result
          path: result.txt

  deploy-tf-model:
      runs-on: self-hosted
      needs: test-model
      steps:
        - name: Download model
          uses: actions/download-artifact@v3
          with:
            name: trained-neuron

        - name: deploy tf model
          run: |
            7z x trained-neuron.7z -aos
            python create_model_TFServing.py
            docker run -d -p 8501:8501 -v "$pwd/model:/models/model" -e MODEL_NAME=model -t tensorflow/serving

  optimization-quantization:
    runs-on: self-hosted
    needs: test-model
    steps:
      - name: Download model
        uses: actions/download-artifact@v3
        with:
          name: trained-neuron

      - name: Download source data
        uses: actions/download-artifact@v3
        with:
          name: source-data

      - name: convert tf model to onnx quantization and deploy
        run: |
          7z x trained-neuron.7z -aos
          7z x captcha_images_v2.zip -aos
          python -m tf2onnx.convert --saved-model assets/models/model_1 --output deploy_onnx/model.onnx
          python quantization.py
          docker build -f deploy_onnx/Dockerfile -t onnx_captcha_solver .
          docker run -d -p 8000:8000 onnx_captcha_solver
